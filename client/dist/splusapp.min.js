angular.module("splus.apis",[]).factory("APIs",["$http",function(a){var b=function(b){return a({method:"GET",url:"/riot/initialgamedata",params:{name:b}})},c=function(b,c){return a({method:"GET",url:"/riot/summonerchampionstats",params:{id:b,champid:c}})},d=function(b){return a({method:"GET",url:"/api/championstaticdata",params:{champNames:b}})},e=function(b){return a({method:"GET",url:"/riot/summonerleaguedata",params:{ids:b}})},f=function(b,c){return console.log("champs ==== ",b,c),a({method:"GET",url:"/api/champmatchupdatagg",params:{name1:b,name2:c}})},g=function(){return a({method:"GET",url:"/api/ddversion"})},h=function(b){return a({method:"GET",url:"/riot/getsummrecentgames",params:{id:b}})};return{getGameInfo:b,getSummonerChampStats:c,getChampStaticData:d,getSummonerLeagueData:e,getChampionMatchupData:f,getDataDragonVersion:g,getSummonerRecentGames:h}}]),angular.module("splus",["angularMoment","ui.bootstrap","ui.router","splus.apis","splus.teams","splus.search","splus.badges","splus.nav","splus.datastore"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/search"),a.state("searchstate",{url:"/search",templateUrl:"/templates/gamesearch.html",controller:"SearchController"}).state("teamstate",{url:"/teams",templateUrl:"/templates/matchview.html",controller:"TeamController"})}]),angular.module("splus.badges",[]).factory("Badges",function(){var a=function(a){return a.summonerChampStats?(a.badges=[],b(a),c(a),d(a),e(a),f(a),g(a),i(a),h(a),void 0):void console.log("No Data to Process for Badges!",a)},b=function(a){if(!a.summonerChampStats.hasOwnProperty("stats"))return a.summonerChampStats.stats={},void(a.summonerChampStats.stats.winRate="0");var b=a.summonerChampStats.stats.totalSessionsPlayed,c=b+" Games Played!";"Just Call Saul"===a.summonerName||"Jhin Main AMA"===a.summonerName?(a.badges.push({display:a.championName+" GOD!",tooltip:"92348231656748 Games Played! Insanity..."}),a.badges.push({display:"Absolute Monster ...",tooltip:" Quit now. This player is out of Control. "})):0===b?a.badges.push({display:"First Time "+a.championName+"!",tooltip:"Hopefully they played a normal..."}):b>1e3?a.badges.push({display:a.championName+" GOD!",tooltip:b+" Games Played! Insanity..."}):b>500?a.badges.push({display:a.championName+" Monster!",tooltip:c}):b>200?a.badges.push({display:a.championName+" Beast!",tooltip:c}):b>150?a.badges.push({display:a.championName+" Veteran!",tooltip:c}):b>100?a.badges.push({display:a.championName+" Legend!",tooltip:"They probably like this champ... "+c}):b>75?a.badges.push({display:a.championName+" Master!",tooltip:c}):b>50?a.badges.push({display:a.championName+" Try Hard!",tooltip:c}):b>25?a.badges.push({display:a.championName+" Disciple!",tooltip:"Its Growing on them... "+c}):b>15?a.badges.push({display:a.championName+" Beginner!",tooltip:"Don't Quit your Day Job... "+c}):b>10?a.badges.push({display:a.championName+" Novice!",tooltip:c}):b>5?a.badges.push({display:a.championName+" Noob!",tooltip:"Keep telling yourself they probably wont feed... "+c}):b>=1&&a.badges.push({display:a.championName+" TrashCan!",tooltip:"At least its not their first game! "+c})},c=function(a){var b=a.summonerChampStats.stats;b.totalPentaKills>1?a.badges.push({display:b.totalPentaKills+" "+a.championName+" Penta Kills!",tooltip:"TotalPentaKills: "+b.totalPentaKills}):b.totalPentaKills>0&&a.badges.push({display:a.championName+" Penta Kill!",tooltip:"TotalPentaKills: "+b.totalPentaKills}),b.totalQuadraKills>1?a.badges.push({display:a.championName+" Quadra Kills!",tooltip:"TotalQuadraKills: "+b.totalQuadraKills}):b.totalQuadraKills>0&&a.badges.push({display:a.championName+" Quadra Kill!",tooltip:"TotalQuadraKills: "+b.totalQuadraKills});var c=(b.totalDoubleKills/b.totalSessionsPlayed).toFixed(2);c>=1.75?a.badges.push({display:a.championName+" DoubleKillGod!",tooltip:"DKPG: "+c}):c>=1.35?a.badges.push({display:a.championName+" DoubleKillAssasin",tooltip:"DKPG: "+c}):c>=1?a.badges.push({display:a.championName+" DoubleKillKing!",tooltip:"DKPG: "+c}):c>=.75&&a.badges.push({display:"DoubleKillMaster!",tooltip:"DKPG: "+c})},d=function(a){if(a.tierData){var b=a.tierData,c=a.tierData.leaguePoints,d=(a.tierData.wins/(a.tierData.losses+a.tierData.wins)*100).toFixed(2);if(d=Number(d),a.rankedOverallWinRate=d,99===c)a.badges.push({display:c+" LP!",tooltip:"So close... "});else if(b.hasOwnProperty("miniSeries")){var e=b.miniSeries.losses,f=b.miniSeries.wins,g=b.miniSeries.target,h=3===g?5:3,i=f+"W/"+e+"L of "+h;g-1===f?a.badges.push({display:"One Victory from Promotion",tooltip:i}):a.badges.push({display:"Player in Series!",tooltip:i})}else 16>100-c&&"master"!==b.tier&&"challenger"!==b.tier&&a.badges.push({display:"One Win for Series!",tooltip:c+" LP!"});b.isHotStreak&&a.badges.push({display:"Hot Streak",tooltip:"Three in a Row, Not Bad..."}),b.isFreshBlood&&a.badges.push({display:"Fresh Blood",tooltip:"This player was recently Promoted"}),d>75?a.badges.push({display:"Challenjour!!?!",tooltip:"This player has a Ranked Win Rate of "+d+"%"}):d>70?a.badges.push({display:"On Another Level!",tooltip:"This player has a Ranked Win Rate of "+d+"%"}):d>60?a.badges.push({display:"Smurf Alert!",tooltip:"This player has a Ranked Win Rate of "+d+"%"}):d>55&&a.badges.push({display:"Solid!",tooltip:"This player has a Ranked Win Rate of "+d+"%"})}},e=function(a){stat=a.summonerChampStats.stats,kda=((stat.totalAssists+stat.totalChampionKills)/stat.totalDeathsPerSession).toFixed(2),kda>10?a.badges.push({display:"Its Over 9000!",tooltip:kda+" KDA"}):kda>8?a.badges.push({display:"Pls... Calm Down",tooltip:kda+" KDA"}):kda>5?a.badges.push({display:"*%@& Smurf!",tooltip:kda+" KDA"}):kda>4?a.badges.push({display:"Legends Never Die",tooltip:kda+" KDA"}):kda>3?a.badges.push({display:"3X!",tooltip:kda+" KDA, Obviously a Professional."}):kda>2.5&&a.badges.push({display:"Superb!",tooltip:kda+" KDA"})},f=function(a){stat=a.summonerChampStats.stats,fb=stat.totalFirstBlood/stat.totalSessionsPlayed*100,fb>90?a.badges.push({display:"Bro Pls!!?",tooltip:fb+"% FirstBloods!"}):fb>50?a.badges.push({display:"U Cray!!?",tooltip:fb+"% FirstBloods!"}):fb>30?a.badges.push({display:"Lee Syndrome!",tooltip:fb+"% FirstBloods!"}):fb>15?a.badges.push({display:"Level 1 Invade Bois!",tooltip:fb+"% FirstBloods!"}):fb>10&&a.badges.push({display:"Supremely Average!",tooltip:fb+"% FirstBloods!"})},g=function(a){stat=a.summonerChampStats.stats;var b=(stat.totalMinionKills/stat.totalSessionsPlayed).toFixed(0),c=stat.totalGoldEarned/stat.totalSessionsPlayed;b>400?a.badges.push({display:"The Flood!",tooltip:"Average "+b+"CS per Game"}):b>300?a.badges.push({display:"Enemy of the Machines!",tooltip:"Average "+b+"CS per Game"}):b>200&&a.badges.push({display:"Master Minion!",tooltip:"Average "+b+"cs per Game"}),c>15e3&&a.badges.push({display:"Fort Knox!",tooltip:c.toFixed(0)+" Earned Average per Game!"})},h=function(a){for(;a.badges.length>5;)a.badges.shift();0===a.badges.length&&a.badges.push({display:"First Game "+a.championName+"!",tooltip:"GG FF 20..."})},i=function(a){console.log("checkLastTenGames = ",a.recentGames),a.recentGames.wardPlaced>40?a.badges.push({display:"Ward's OP!!",tooltip:"Averages "+a.recentGames.wardPlaced+" Wards per Game."}):a.recentGames.wardPlaced>30?a.badges.push({display:"Ward Spammer!!",tooltip:"Averages "+a.recentGames.wardPlaced+" Wards per Game."}):a.recentGames.wardPlaced>20?a.badges.push({display:"Ward King!!",tooltip:"Averages "+a.recentGames.wardPlaced+" Wards per Game."}):a.recentGames.wardPlaced>15&&a.badges.push({display:"Not A Bronze Warder!!",tooltip:"Averages "+a.recentGames.wardPlaced+" Wards per Game."}),"Jhin Main AMA"===a.summonerName&&a.badges.push({display:"This Cheater Still Buys Wards!!",tooltip:"Averages 45749486867 Wards per Game."}),a.recentGames.gamesWon>10?(a.badges.push({display:"Killionaire!",tooltip:"10 in a Row... Insane!"}),a.badges.push({display:"Invincible!",tooltip:"Won "+a.recentGames.gamesWon+" of Last 10 Games!"})):a.recentGames.gamesWon>9?a.badges.push({display:"Killpocalypse!",tooltip:"Won "+a.recentGames.gamesWon+" of Last 10 Games!"}):a.recentGames.gamesWon>8?a.badges.push({display:"Killtastrophe!",tooltip:"Won "+a.recentGames.gamesWon+" of Last 10 Games!"}):a.recentGames.gamesWon>7&&a.badges.push({display:"Killimanjaro!",tooltip:"Won "+a.recentGames.gamesWon+" of Last 10 Games!"}),a.recentGames.kda>6?a.badges.push({display:"Perfection!",tooltip:a.recentGames.kda+" KDA Over the Last 10 Games!"}):a.recentGames.kda>5?a.badges.push({display:"Hail to the King!",tooltip:a.recentGames.kda+" KDA Over the Last 10 Games!"}):a.recentGames.kda>4?a.badges.push({display:"Rampage!",tooltip:a.recentGames.kda+" KDA Over the Last 10 Games!"}):a.recentGames.kda>3&&a.badges.push({display:"Open Season!",tooltip:a.recentGames.kda+" KDA Over the Last 10 Games!"})};return{createBadgeProfiles:a}}),angular.module("splus.datastore",[]).factory("BuildData",["DataHandler","APIs",function(a,b){var c=function(b){a.gameData.data.participants.forEach(function(c,d){if(b&&b.data[c.summonerId]){var e=b.data[c.summonerId][0];c.tierData=e.entries[0],c.tierData.name=e.name,c.tierData.queue=e.queue,c.tierData.tier=e.tier.toLowerCase(),c.tierData.division=e.entries[0].division.toLowerCase(),c.summonerName.toLowerCase()===a.primaryPlayer.name.toLowerCase()&&(a.primaryPlayer.tier=c.tierData.tier)}else c.tierData={},c.tierData.tier="i",c.tierData.division="unranked"})},d=function(){return Promise.all(a.gameData.data.participants.map(function(a){return a?b.getChampStaticData(a.imageUrl):void 0}))},e=function(){var c="";return a.gameData.data.bannedChampions.forEach(function(a,b){a&&(c+=a.championUrl+",")}),c=c.slice(0,-1),b.getChampStaticData(c).then(function(b){b&&b.data.forEach(function(b,c){return a.gameData.data.bannedChampions[c].role=b.role,a.gameData.data.bannedChampions[c].staticData=b.general,b.general})})},f=function(a,c,d){a.forEach(function(a,b){a&&d[b]?(c.data.participants[b].champStaticData=a.data,c.data.participants[b].summonerChampStats=d[b].data):a.data&&(c.data.participants[b].champStaticData=a.data)});var e=c.data.idArray.toString();return b.getSummonerLeagueData(e)},g=function(b){return new Promise(function(c,d){if(!b)return void d(b);for(var e=[],f=["Jungle","ADC","Top","Support","Middle"],g=0;g<b.length;++g)b[g].data[0]?(e.push(b[g].data[0]),e[g].versus=a.blueteam[g].championName+" vs "+a.redteam[g].championName,e[g].favors=b[g].data[0].winRate<50?"Favors "+a.redteam[g].championName:"Favors "+a.blueteam[g].championName,e[g].games+=" Games Analyzed",e[g].winRate+=" %",e[g].role=f[g]):(e[g]={error:"Matchup Not Found!"},e[g].role=f[g]);c(e)})},h=function(){var c=[];return a.gameData.data.participants.forEach(function(a,d){a&&c.push(b.getSummonerChampStats(a.summonerId,a.championId))}),Promise.all(c)},i=function(){return Promise.all(a.gameData.data.participants.map(function(a){return b.getSummonerRecentGames(a.summonerId).then(function(b){console.log("data from recent games = ",b),a.recentGames=b.data})}))};return{buildPlayerObjects:d,getTierData:c,addBanStatic:e,processPlayers:f,getSummonerChampionStats:h,processMatchupData:g,teamRecentGames:i}}]).service("DataHandler",function(){this.gameData={},this.matchups=[],this.blueteam=[],this.redteam=[],this.bluebans=[],this.redbans=[],this.primaryPlayer={name:void 0,tier:void 0}}),angular.module("splus.nav",[]).controller("NavController",["$scope",function(a){}]),angular.module("splus.search",[]).controller("SearchController",["$scope","APIs","$state","$rootScope","DataHandler",function(a,b,c,d,e){d.bgid="mainbg",a.text="",a.error="",a.submit=function(){if(void 0!==a.text&&"string"==typeof a.text){var d=a.text;d=d.replace(/\s+/g,""),b.getGameInfo(d).then(function(b){b.data.hasOwnProperty("participants")?(e.primaryPlayer.name=a.text,e.gameData=Object.assign({},b),console.log(e.gameData),c.go("teamstate")):"string"==typeof b.data&&(a.error=b.data)})["catch"](function(b){console.log("catch err! = ",b),a.error="Summoner Not in Game!"})}}}]),angular.module("splus.teams",[]).controller("TeamController",["$rootScope","$scope","DataHandler","BuildData","Badges","APIs",function(a,b,c,d,e,f){var g=c.gameData;b.data=g.data,b.matchups=c.matchups,b.blueteam=c.blueteam,b.redteam=c.redteam,b.bluebans=c.bluebans,b.redbans=c.redbans,b.highestTier=c.primaryPlayer.tier,b.gameStarted=g.data.gameStartTime,b.primaryColor="",a.bgid="teamsbg",b.version="6.9.1",b.insertData=function(){var a,h;d.getSummonerChampionStats().then(function(a){return console.log("Champ Stats! = ",a),h=a,d.buildPlayerObjects()})["catch"](function(a){console.log(a)}).then(function(b){return a=b,d.teamRecentGames()}).then(function(b){return d.processPlayers(a,g,h)})["catch"](function(a){console.log(a)}).then(function(a){return console.log("gameData = ",g.data),d.getTierData(a),d.addBanStatic()})["catch"](function(a){console.log(a)}).then(function(a){g.data.bannedChampions.forEach(function(a,b){100===a.teamId?c.bluebans.push(a):c.redbans.push(a)});var b=[];return g.data.participants.forEach(function(a,d){4>=d&&(c.blueteam.push(g.data.participants[d]),c.redteam.push(g.data.participants[d+5])),c.blueteam[d]&&c.redteam[d]&&(champid1=c.blueteam[d].imageUrl,champid2=c.redteam[d].imageUrl,champid1=champid1.replace(/\s+/g,""),champid2=champid2.replace(/\s+/g,""),b.push(f.getChampionMatchupData(champid1,champid2))),e.createBadgeProfiles(g.data.participants[d])}),Promise.all(b)})["catch"](function(a){console.log(a)}).then(function(a){return d.processMatchupData(a)}).then(function(a){b.$apply(function(){console.log("applying matchup changes!"),b.matchups=a}),console.log("matchups = ",b.matchups)})["catch"](function(a){console.log("Insert Data Error!",a)})},b.insertData()}]);